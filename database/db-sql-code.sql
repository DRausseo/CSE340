-- Eliminar la tabla 'account' si existe
DROP TABLE IF EXISTS public.account;

-- Eliminar la tabla 'inventory' si existe
DROP TABLE IF EXISTS public.inventory CASCADE;

-- Eliminar el tipo 'account_type' si existe
DROP TYPE IF EXISTS public.account_type;

-- Crear el tipo 'account_type'
CREATE TYPE public.account_type AS ENUM
    ('Client', 'Employee', 'Admin');

ALTER TYPE public.account_type
    OWNER TO cse340demo;

-- Crear la tabla 'inventory'
CREATE TABLE public.inventory
(
    inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    inv_make character varying NOT NULL,
    inv_model character varying NOT NULL,
    inv_year character (4) NOT NULL,
    inv_description text NOT NULL,
    inv_image character varying NOT NULL,
    inv_thumbnail character varying NOT NULL,
    inv_price numeric(9, 0) NOT NULL,
    inv_miles integer NOT NULL,
    inv_color character varying NOT NULL,
    classification_id integer NOT NULL,
    CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);

-- Crear relación entre las tablas 'classification' e 'inventory'
ALTER TABLE public.inventory
    ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id)
    REFERENCES public.classification (classification_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;

-- Crear la tabla 'account'
CREATE TABLE public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

-- Insertar nuevo registro en la tabla 'account'
INSERT INTO public.account (account_firstname, account_lastname, account_email, account_password)
VALUES ('Tony', 'Stark', 'tony@starkent.com', 'Iam1ronM@n');

-- Seleccionar el registro insertado
SELECT * FROM public.account WHERE account_email = 'tony@starkent.com';

-- Modificar el registro de Tony Stark para cambiar el 'account_type' a 'Admin'
UPDATE public.account
SET account_type = 'Admin'
WHERE account_email = 'tony@starkent.com';

-- Eliminar el registro de Tony Stark
DELETE FROM public.account
WHERE account_email = 'tony@starkent.com';

-- Modificar el registro 'GM Hummer' para cambiar la descripción
UPDATE public.inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer';

-- Seleccionar campos de las tablas 'inventory' y 'classification' usando un INNER JOIN
SELECT i.inv_make, i.inv_model, c.classification_name
FROM public.inventory i
INNER JOIN public.classification c ON i.classification_id = c.classification_id
WHERE c.classification_name = 'Sport';

-- Actualizar todos los registros en la tabla 'inventory' para agregar '/vehicles'
UPDATE public.inventory
SET inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/'),
    inv_thumbnail = REPLACE(inv_thumbnail, '/images/', '/images/vehicles/');

